<!doctype html>
  <html lang=en>
  <head>
    <meta charset=utf-8>
    <meta name="viewport" content="width=device-width">
    <meta name="mobile-web-app-capable" content="yes">

    <title>candy pie playgrond</title>

    <style>
      body {
        padding-left: 10px;
        color: steelblue;
        max-width: 600px;
        border: 1px solid lightgrey;
      }

      .configOption {
        display: inline-block;
        width: 50%;
        margin: 8px;
      }

      .candy-pie-babylon-canvas {
        touch-action: none;
        outline: none;
        width: 80%;
        margin-left: 10%;
        margin-bottom: 30px;
      }

      .btn {
        width: 80%;
        margin-left: 10%;
        background-color: lightblue;
        padding-top: 20px;
        padding-bottom: 20px;
        margin-bottom: 25px;
        border: none;
        box-shadow: 3px 7px steelblue;
        font-weight: bold;
        font-size: 24px;
        color: steelblue;
      }

      .btn-plus {
        margin-left: 10%;
        padding-top: 10px;
        padding-bottom: 10px;
        margin-bottom: 10px;
      }

      #slices-id {
        margin: 20px;
      }
    </style>

    <script src="https://cdn.babylonjs.com/babylon.js"></script>
    <script src="./candy-pie-babylon.js"></script>

    <link href="https://unpkg.com/tabulator-tables/dist/css/tabulator.min.css" rel="stylesheet">
    <script type="text/javascript" src="https://unpkg.com/tabulator-tables/dist/js/tabulator.min.js"></script>

  </head>
  
  <body>

    <h2>candy pie playground</h2>

    <h3>data for the slices</h3>

    <div id="slices-id"></div>
    
    <button onclick="table.addRow( {}, false);" class="btn-plus">Add row</button>

    <p style="margin-left: 10%;">Set <i>height</i> or <i>ArcPct</i> to zero to remove a slice</p>

    <h3>candy pie</h3>
    <canvas id='canvas-id' class='candy-pie-babylon-canvas'></canvas>

    <button onclick="pie3d.slices = table.getData(); candy_pie_babylon( pie3d);" class="btn">Update Candy Pie</button>

    <h3>configuration</h3>

    <p class="configOption">innerRadiusPct</p>
      <input type="number" name="innerRadiusPct"  min="0" max="99" onchange="pie3d[this.name] = this.value;">
      <span>%</span>
      <br>

    <p class="configOption">spaceBetweenSlices</p>
      <label>false</label><input type="radio" name="spaceBetweenSlices" value="0" onchange="pie3d[this.name] = Boolean( Number(this.value));">
      <label>true </label><input type="radio" name="spaceBetweenSlices" value="1" onchange="pie3d[this.name] = Boolean( Number(this.value));">
      <br>

    <p class="configOption">backgroundColor</p>
      <input type="color" name="backgroundColor" value="#e66465" onchange="pie3d[this.name] = this.value;">
      <br>

    <p class="configOption">secondsPerRotation</p>
      <input type="number" name="secondsPerRotation" min="0" max="100" onchange="pie3d[this.name] = this.value;">
      <span>s</span>
      <br>
    
    <p class="configOption">clickScalePct</p>
      <input type="number" name="clickScalePct" min="0" max="100" onchange="pie3d[this.name] = this.value;">
      <span>%</span>
      <br>
    
    <p class="configOption">allowVerticalRotation</p>
      <label>false</label><input type="radio" name="allowVerticalRotation" value="0" onchange="pie3d[this.name] = Boolean( Number(this.value));">
      <label>true </label><input type="radio" name="allowVerticalRotation" value="1" onchange="pie3d[this.name] = Boolean( Number(this.value));">
      <br>

      <p class="configOption">cameraDegreesY</p>
      <input type="number" name="cameraDegreesY"  min="0" max="90" onchange="pie3d[this.name] = this.value;">
      <span>&deg;</span>
      <ul>
        <li>0 &deg; : you see a rectangle, looking at the front surface of the slices
        <li>90 &deg; : you see the pie chart from above, the pie becomes a circle
      </ul>
    
      <p class="configOption">verticalFactor</p>
      <input type="number" name="verticalFactor"  min="1" max="10" onchange="pie3d[this.name] = this.value;">
      <br>

    <h3>labels</h3>
    
    <ol>
      <li>showLabel
      <li>showHeight
      <li>labelFontFactor
      <li>labelExtraTopMargin
      <li>labelColor
    </ol>
    
    <script>
      let pie3d = {
        htmlCanvasId: 'canvas-id',
        slices: [
          { height: 100, color: 'indianred'},
          { height: 100, color: 'steelblue'},
          { height: 100, color: 'olive'}
        ],
        spaceBetweenSlices: false,
        innerRadiusPct: 40,
        backgroundColor: '#d3d3d3',
        secondsPerRotation: 3,
        showLabel: true
      };
              
      candy_pie_babylon( pie3d);

      // push the pie3d values to the configuration elements above
      
      document.getElementsByName("spaceBetweenSlices")[Number(pie3d.spaceBetweenSlices)].checked = true;
      document.getElementsByName("innerRadiusPct")[0].value = pie3d.innerRadiusPct;
      document.getElementsByName("backgroundColor")[0].value = pie3d.backgroundColor;
      document.getElementsByName("secondsPerRotation")[0].value = pie3d.secondsPerRotation;
      document.getElementsByName("clickScalePct")[0].value = pie3d.clickScalePct;
      document.getElementsByName("allowVerticalRotation")[Number(pie3d.allowVerticalRotation)].checked = true;
      document.getElementsByName("verticalFactor")[0].value = pie3d.verticalFactor;
      document.getElementsByName("cameraDegreesY")[0].value = pie3d.cameraDegreesY;

      var table = new Tabulator("#slices-id", {
        data: pie3d.slices,
        layout: "fitColumns",
        columns:[
          { title: "height", field: "height", headerSort: false, resizable: false, editor: true, hozAlign: "right"},
          { title: "color",  field: "color" , headerSort: false, resizable: false, editor: true, formatter: "color"},
          { title: "arcPct", field: "arcPct", headerSort: false, resizable: false, editor: true, hozAlign: "right"},
          { title: "label",  field: "label",  headerSort: false, resizable: false, editor: true}
        ]
      });

    </script>
  </body>
</html>